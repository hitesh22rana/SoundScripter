version: "3"
name: "soundscripter-backend"

services:
    # Postgres database
    db:
        image: postgres:alpine
        container_name: db
        restart: always
        networks:
            - soundscripter-backend
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=db
        volumes:
            - ./data/db:/var/lib/postgresql/data

    # RabbitMQ message broker
    message-broker:
        image: rabbitmq:latest
        container_name: message-broker
        restart: always
        networks:
            - soundscripter-backend
        ports:
            - "5672:5672"

    # Redis PubSub for realtime server side events notifications
    pub-sub:
        image: redis
        container_name: redis
        restart: always
        networks:
            - soundscripter-backend
        ports:
            - "6379:6379"

    # Celery task queue for task processing
    task-queue:
        build:
            context: ./
            dockerfile: Dockerfile.task-queue
        container_name: task-queue
        restart: always
        networks:
            - soundscripter-backend
        environment:
            - WORKER_CONCURRENCY=4
            - CELERY_BACKEND=rpc://
            - CELERY_BROKER=pyamqp://message-broker
            - LOCAL_STORAGE_BASE_PATH=${PWD}/data
            - REDIS_HOST=pub-sub
            - REDIS_PORT=6379
            - POSTGRES_HOST=db
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_PORT=5432
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./data:/task-queue/data
        depends_on:
            - db
            - message-broker
            - pub-sub

    # Api
    api:
        build:
            context: ./
            dockerfile: Dockerfile.api
        container_name: backend
        restart: always
        networks:
            - soundscripter-backend
        environment:
            - WORKER_CONCURRENCY=4
            - CELERY_BACKEND=rpc://
            - CELERY_BROKER=pyamqp://message-broker
            - LOCAL_STORAGE_BASE_PATH=${PWD}/data
            - REDIS_HOST=pub-sub
            - REDIS_PORT=6379
            - POSTGRES_HOST=db
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_PORT=5432
        ports:
            - "8000:8000"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./data:/api/data
        depends_on:
            - db
            - message-broker
            - pub-sub
            - task-queue

networks:
    soundscripter-backend:
        name: soundscripter-backend
